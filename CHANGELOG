Possible compatibility problems with earlier versions marked with '*'.

* Changed some C definitions regarding EXPLAIN record syntax (prt-exp.h)
and added member 'languages' in TargetInfo (which was missing).

Changed the way attribute sets are handled in the retrieval
module. These are now cached, just like the abstract syntaxes
(schemas).

Changed YAZ so that it links with compiled ASN.1.

Added Explain-schema definitions and mapping routines. The following
Explain categories have been implemented: AttributeDetails,
AttributeSetInfo, DatabaseInfo, CategoryList and TargetInfo.

Fixed minor bug in Windows version of Server Library.

--- 1.4pl2+ 1998/4/17 (Released with Zebra)

Added Extended Services to server (backend.h). Thanks to Charles Woodfield.

Added EXTERNAL: UNIverse Resource Report (non-standard).

Implemened odr_enum and odr_set_of functions to handle ASN.1 types
ENUMERATED and SET OF.

* Added 'const' to some of the char pointer arguments for the
functions, data1_read_node, data1_getelementbytagname,
data1_insert_taggeddata, data1_getesetbyname, data1_getelementbyname,
data1_get_absyn.

Fixed bug in data1_insert_taggeddata - the last_child member of
parent wasn't initialised.

* Changed data1_read_record and data1_read_node so that the supplied
"SGML"-buffer is read-only. In particular the resulting data1 - tree
doesn't refer to any parts of the "SGML"-buffer.

Fixed bug in server library (Windows version of statserv_remove).

* Changed code so that it compiles as C++. The type definition
of Odr_fun which is a member of Odr_arm was changed. The result is,
that an explicit typecast is needed for the fun pointer when
using Odr_arm - as in:
    {1, -1, -1, Z_IdAuthentication_idPass, (Odr_fun)z_IdPass},

Updated TagSet-G and -M definitions (tagsetm.tag and tagsetg.tag).

Implemented the new structured date and time definition as approved
by the ZIG. Added schemaId element to the specificTag in Espec-1
(also approved at the last ZIG). Thanks to RVDM.

Added some Object identifiers (RVDM).

Changed the Update Extended Service (RVDM).

Added command "refid" to client which specifies referenceId for
the following requests.

Implemented extended service handling for server. See ztest.c
for an example as well as backend.h. New handlers are registerd
in the Init handler.

* Changed interface for sort in server.

Added new members to statserv_options_block. It allows a server
to read options from another source than just the command line. Thanks
to Charles Woodfield.

* Changed definition of Z_Triple in file prt-grs.h - member boolean
renamed to zboolean. Some C++ compilers complained about the name.

Minor changes to gils.abs. Added index 's' (sort) on title
and date/time-last-modified.

--- 1.4pl2 1998/1/30

Fixed bug in server library regarding inetd mode (-i). This bug
was introduced by release 1.4.

--- 1.4pl1 1998/1/29

Added sort facility in client and backend server interface.

Fixed problem with dependencies in Makefile(s).

Fixed bugs for encoders/decoders of extended services and 
SearchInfoReport.

Implemented sub-tree feature for schemas. Sub-trees are
referenced in *.abs-files. See explain.abs for an example
of the use of this feature.

Modified bib1.att; local attributes for ANY didn't include
ANY itself (only affects use of the retrieval module).

Fixed bug in plain SGML reader in function data1_read_node:
tags with prefix "var" was incorrectly interpreted as variants.

Added feature "sub-schemas" to enable references to - and definitions
of - group of elements.

* Removed member parent from type data1_element (in data1.h).

Implemented function odr_nullval() that returns the value of
ODR_NULLVAL.

* Removed member num_children from data1_node (in data1.h).

Made NT service interface part of the server library. The
function statserv_main uses the NT service when required and
calls the statserv_start / statserv_close routines.

Routine zget_SearchRequest and zget_PresentRequest fills
resultSetName/Id member with "default" instead of "Default".

Fixed memory leak in server. Request queue member wasn't freed.

Fixed nmem_exit so that memory is freed.

--- 1.4 1997/10/2

Revised the CCL parser utility to be thread safe.

Added function, oid_ent_to_oid, to replace the function 
oid_getoidbyent, which is not thread safe.

* Added nmem_init and nmem_exit to initialize and release
NMEM resources. Function nmem_init should be called once in the
initial thread before NMEM/ODR is used. statserv.c and client.c
have been changed accordingly. The change was necessary to make
NMEM thread safe. The NMEM memory pool is shared amongst threads
in a process. Unix-based applications will still work fine without
calling this.

Added NT Services interface for the the Z39.50 (statserv) Server. 
Refer to the ztest.c source on the usage.

Windows 95/NT port using MSVC5.0. Project files are included in the
distribution.

* Defined new 'global' handle for the retrieval (data1) system. The
new handled, data1_handle, describes the state of the data1 system.
This handle is passed as first argument to virtually all
data1 related routines. The functions data1_create and data1_destroy
creates and destroys a data1 handle respectively.

Added ODR encode stream member to all backend request structures
init, search, scan etc. This stream should be used to allocate all
memory used for the response when thread safe operation is needed.

Changed the comstack utility, cs_addstr, to be thread safe. The
returned hostname string returned by the function is now part the
COMSTACK instance.

Added comstack utility, cs_straddr, which replaces the tcpip_strtoaddr
function. The cs_straddr takes a COMSTACK handle as argument, so this
function must be used after cs_create and before bind/connect.
This function is thread safe.

Moved test server to 'ztest' directory - generic server code still
in 'server' directory.

Made prefix query (pquery.c) utility thread safe.

Added new function modifier YAZ_EXPORT to 'export' public DLL
functions when using windows (see include/yconfig.h).

Added definitions to the OID database (util/oid.c) (RVDM).

Added new BIB-1 diagnostic messages to the handler diagbib1_str.

Added call to ccl_rpn_delete in client program.

Added ODR argument to ccl_rpn_query and ccl_scan_query to provide
release of RPN structure.

Added support for C++, headers uses extern "C" for public definitions.
With input from RVDM.

In handling of SEQUENCE OF: Counter set to zero when SEQUENCE OF is absent.
Thanks to Ronald van der Meer (RVDM).

Added initializers (zget_ routines) for a number of PDUs. Thanks to RVDM.

Added support for private extensions to the OID database
(oid_setprivateoids()). Thanks to RVDM.
    
Added optional, physical ANY (key replication)

Fixed null-reference problem in GRS-1 output filter.

Proximity operator added to Prefix Query Format (PQF).

In test client command "base" accepts multiple databases.

Fixed bug in cs_close stack that caused trouble with WINSOCK.

--- 1.3 1996/10/11

Fixed tagging bug in ResourceReportResponse PDU encoder/decode.

Smallish bug-fixes in the new encoders/decoders (explain).

Bug fixed in DeleteRequest.

Fixed tagging bug of type 101 query in SearchRequest-Query PDU encoder/decoder.

Fixed tagging bug in ResourceReportResponse PDU encoder/decode.

Added SOIF syntax (using private OID for now) to retrieval module and client.

Added Update extended service.

Added SearchResult-1 additional info structure.

Added optional CCL (ISO8777) interpreter as separate module. Available
in linemode client.

--- 1.2 1996/6/10 (1st anniversary release)

Added Summary record syntax. Lightly tested.

Added OPAC record syntax. Untested.

Added ResourceReport service encoders/decoders. Untested.

Fixed bug in z_Unit - wrong tagging on unitSystem.

Fixed bug in the DiagRecs decoder.

Added options for max PDU size and session timeout to frontend-server.

Added documentation of query-language parsers and other supporting utilities.

[frontend-server] Added Attribute set to the bend_scanrequest API.

[frontend-server] NextResultSetPosition was sometimes set incorrectly when
surrogate diagnostics were generated.

[retrieval] Allow multiple local values for attribute.

[retrieval] Allow multiple attributes per element in .abs files. index type.

[retrieval] Added Summary tagset, abstract syntax, and d1-node/ASN filter.

--- 1.1pl2  1996/4/10

Minor changes, mostly specific to Zebra's requirements (retrieval)

--- 1.1  1996/2/20

Repaired bug in frontend server when running multiple listening
endpoints in dynamic mode.

z_External() now won't break if a known, ASN.1 value comes encapsulated
in an octet-string. The value will pass through unmodified in an Odr_oct.

Added a bit of code to the demo client to decode & display
ASN.1-structured records represented in the octet-aligned branch of
the EXTERNAL CHOICE. Thanks to CAS for prodding us to finally do this.

Added z_ext_getentbyref() to the ASN module. Doc updated.

* Completed the SCAN definition in the ASN module. This may break SCAN
code based on older YAZ-versions at compile-time. The fix is easy -
look in proto.h.

* Added 'displayTerm' and OtherInformation to the TermInfo structure
under the SCAN definition. Remember to initialize this, server-people.

Comstack should now support the WAIS protocol in TCP/IP mode. Note
that this does not extend to ODR and ASN.

Comstack allows insertion of established socket (primarily for
inetd-operation of servers). Doc updated.

Front-end server can now start from the inetd in TCP mode. Doc
updated.

--- 1.0pl4 1996/1/24

Added Sort PDU.

Fixed small problem in SUTRS-filter. A newline was sometimes inserted before
the rank and record number.

Adjustments to the frontend server.

Fixed diagnostic BER dumper. It ignored the file argument.

--- 1.0pl3 1996/1/2

Various changes to retrieval module.

Changed the union discriminators of the protocol files from enums to
ints paired with #defines.

*Changed oident.class to oident.oclass to avoid a reserved word in C++
 compilers.

*Changed operator in the RPN structure to 'roperator', again to avoid a
 conflict with C++.

Fixed problems in Explain decoders/encoders.

--- 1.0pl2 1995/12/6

Memory bug in log module fixed.

--- 1.0pl1 1995/12/5

Occasional malloc() of 0 bytes fixed in d1_espec.c.

Bug in Explain DatabaseInfo module fixed.

Some '\r' snuck into one or two of the ret'l config tables. A curse on Windows.

--- 1.0 1995/11/28

The shift to v1.0 signals that we now consider the *core* functionality
of YAZ reasonably stable (the core being more or less equivalent to
Z39.50-1992). Some of the really nifty v3 stuff is still not heavily
tested (Explain not at all - though that will happen soonish).

Minor changes to code to support Windows port.

Various minor changes after we're getting to use GRS-1 & co. more.

Added Espec-1 format.

Added VisibleString field body type to GRS-1. It is illegal acc. to my copy
of the protocol and it cannot be selected when encoding (maps into 'string'
when decoding). Needed to talk to some servers.

Demo client can request simple element set names.

Added Diagnostic Format encoders/decoders.

Added simple Close handling to frontend server (no hooks for resource
reporting yet), and demonstration client.

Added cs_addrstr() command to COMSTACK to retrieve peer hostname/address.

--- 1.0b3 1995/08/24

Fixed bug in the frontend-server. The numberOfRecordsReturned field was
handled incorrectly when records were requested in the searchResponse. This
will only affect you if you use the frontend-server.

Added GRS-1 encoders/decoders to the service-level API. Lightly tested.
Test-client will ask for and print GRS1. Ztest will return dummy records
on request.

Added Explain encoders/decoders to the service-level API. Untested.

Added Extended Services: Item Order encoders and decoders to the Service-
level API. Untested. We could use a recent copy of the pertinent bits
of the ILL protocol to add those bits.

Added diagnostic format 1 encoders/decoders to the service-level API.
Untested.

Moved pretty-printing of structure-wrappers ({..}) from odr_seq.c to
odr_cons.c, which causes a more correct output.

Fixed handling of searchRequest in frontend server. NextResultSetPosition
was always set to 0 when no records were requested in the searchRequest.

* Added better external-handling. This shouldn't harm old code that
*encodes* externals. It can break code that looks for a
'single-ASN1-type' representation, since those types that are known
are now decoded immediately. Look at the SUTRS sample code in
seshigh.c and client.c. Documentation updated.

Handling of structured records in bend_fetchresponse. Length -1 marks
structured record, type is deduced from format field.

--- 1.0b2 1995/06/27
Fairly quick maintenance release to add SUTRS support.

Fixed handling of SUTRS records in the demonstration client.

* Added format field to the bend_fetchrequest and bend_fetchresponce
structures of the backend API (frontend server). When the record is
returned, the value of the format field is mapped to an OID. The
value VAL_SUTRS will also cause a slightly different ASN.1 packaging
of the record. The special value VAL_NONE in the bend_request means
that no specific format was requested by the client. Documentation
updated accordingly. Test server (ztest) will return a fixed dummy
SUTRS record if your client requests SUTRS.

Documentation updated accordingly.

You can now set external libraries and RANLIB support in the top-level
Makefile.

--- 1.0b 1995/06/19
First public release.
