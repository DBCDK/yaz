YAZ toolkit - $Id: README,v 1.43 2003-02-20 21:23:47 adam Exp $

Copyright (C) 1995-2003, Index Data ApS.
See the file LICENSE for details.

The primary output of the source here is the YAZ library, which
contains support functions for implementing the server or client
role of Z39.50 and SRW.

Windows programmers: refer to the file windows.txt which describes how
to build the software using Microsoft Visual C++.

On Unix, GNU configure is used to configure YAZ and generate Makefiles.
Type "./configure", then "make" to build YAZ.

Note: If you are using the CVS snapshot of YAZ you must have autoconf,
automake and libtool installed. Before running configure, create
support files by running buildconf.sh in the top-level directory of YAZ.  

In any case refer to the documentation in sub directory doc or read
it online at http://www.indexdata.dk/yaz/

File organisation:

doc      Documentation.

util     Various little utility functions. Logging, memory debugging,
	 primitive ISO 2709 presentation for the yaz-client, etc. You'll
	 find the ASN.1 Compiler for YAZ here as well (yaz-comp).

odr      Open Data Representation. This module implements the BER
 	 encoding rules.

z39.50   codecs for the Z39.50 protocol. This module does the same job
         as the old 'asn' module except that the source files are
         auto-generated using an YAZ' ASN.1 Compiler (yaz-comp).

zutil    This module implements a collection of Z39.50 and SRW utilities,
	 such as query parsing, etc.

ill      Codecs for the ISO ILL protocol.

comstack This module implements the transport transparency
	 stack (COMSTACK). The comstack implements a generic interface
	 for exchanging BER-encoded records over a network. It supports
	 the 'American' mode of exchanging the records straight over
	 TCP/IP, and uses Peter Furniss' XTIMOSI package over RFC1006.
	 Look for documentation in the file comstack.man.

zoom     An implementation of Mike Taylors Z39.50 Object Oriented
         Model : ZOOM. If you'd like to build Z39.50 client applications
         in C this may be good start. You'll find example programs in 
         this directory too.

server   This is the implementation of the Z39.50 server frontend. It
	 provides event-handling and server managament functions,
	 and calls the backend primitives (best documentation of these
	 is in the file include/yaz/backend.h).

ccl      CCL parser.

cql      CQL parser.

client   A demonstration client for testing the protocol. It's bug'n
         ugly. But, it supports many features.

ztest    A demonstration server that implements a backend.

include/yaz The various header files.

lib      The libraries. Primarily libyaz.la. The makefile gathers the
         libraries from previous modules into libyaz.la.

To get more information or assistance, send mail to yaz-help@indexdata.dk.
Even better, sign on to the YAZ mailing list here:
http://www.indexdata.dk/mailman/listinfo/yazlist

