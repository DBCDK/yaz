dnl YAZ Toolkit
dnl (c) Index Data 1994-1999
dnl See the file LICENSE for details.
dnl $Id: configure.in,v 1.14 1999-12-16 23:36:19 adam Exp $
AC_INIT(include/yaz/yaz-version.h)
dnl
dnl ------ Checking programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
dnl 
dnl ----- Build root
AC_SUBST(build_root)
AC_ARG_WITH(build-root, [  --with-buildroot        RPM Build root],[build_root=$withval],[build_root=""])
dnl
dnl ----- YC: The Yaz Compiler
AC_SUBST(ASNMODULE)
AC_SUBST(ILLMODULE)
AC_SUBST(ILLLIB)
AC_ARG_ENABLE(yc,[  --enable-yc             compile using YAZ' ASN.1 Compiler], , enable_yc=yes)
if test "$enable_yc" = "yes"; then
	ASNMODULE="z39.50"
	ILLMODULE="ill"
	ILLLIB=libill.a
	cp -f include/yaz/z-proto.h include/yaz/proto.h
else
	ILLMODULE=""
	ASNMODULE=asn
	ILLLIB=""
	cp -f include/yaz/prt-proto.h include/yaz/proto.h
fi
dnl
dnl ----- Sockets
checkBoth=0
AC_CHECK_FUNC(connect)
if test "$ac_cv_func_connect" = "no"; then
	AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", checkBoth=1)
fi
if test "$checkBoth" = "1"; then
	oldLibs=$LIBS
	LIBS="$LIBS -lsocket -lnsl"
	AC_CHECK_FUNC(accept, , [LIBS=$oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))
dnl
dnl ------ GNU Readline
AC_CHECK_LIB(readline, readline, [LIBS="$LIBS -lreadline"])
AC_CHECK_LIB(history, add_history, [LIBS="$LIBS -lhistory"])
if test "$ac_cv_lib_readline_readline" = "yes"; then
	AC_CHECK_HEADERS(readline/readline.h readline/history.h)
fi
dnl
dnl ------ tcpd
AC_ARG_ENABLE(tcpd,[  --enable-tcpd           enable TCP wrapper for server if available])
if test "$enable_tcpd" = "yes"; then
	AC_MSG_CHECKING(for working tcpd.h)
	oldLibs=$LIBS
	LIBS="$LIBS -lwrap -lnsl"
	AC_TRY_LINK([#include <syslog.h>
	#include <tcpd.h>
	int allow_severity = LOG_INFO;
	int deny_severity = LOG_WARNING;],
	[struct request_info request_info; int i;
	i = hosts_access(&request_info);],tcpd_ok=1, tcpd_ok=0)
	if test "$tcpd_ok" = "0"; then
		AC_MSG_RESULT(no)
		LIBS=$oldLibs
	else
		AC_MSG_RESULT(yes)
		AC_DEFINE(HAVE_TCPD_H)
	fi
fi
dnl
dnl ------ Headers
AC_STDC_HEADERS
if test "$ac_cv_header_stdc" = "no"; then
	AC_MSG_WARN(Your system doesn't seem to support ANSI C)
fi
dnl
dnl ------ Threads
AC_ARG_ENABLE(threads, [  --enable-threads        enable threads if available])
if test "$enable_threads" = "yes"; then
	AC_CHECK_HEADERS(pthread.h threads.h)
	AC_CHECK_FUNC(pthread_mutex_lock)
	if test "$ac_cv_func_pthread_mutex_lock" = "no"; then
		AC_CHECK_LIB(pthread, main)
	fi
	AC_DEFINE(_REENTRANT)
fi
dnl
dnl ------ Makefiles
AC_OUTPUT(Makefile util/Makefile odr/Makefile z39.50/Makefile asn/Makefile zutil/Makefile comstack/Makefile client/Makefile server/Makefile ztest/Makefile retrieval/Makefile ccl/Makefile lib/Makefile rfc1006/Makefile ill/Makefile)
